{"version":3,"sources":["codemirror.js","util.js","bread.js","dag.js","index.js"],"names":["DiffMatchPatch","require","dmp","global","CodeEditor","_this","this","el","ReactDOM","findDOMNode","querySelector","cm","CodeMirror","value","props","state","data","mode","matchBrackets","lineNumbers","keyMap","autoCloseBrackets","lineWrapping","undoDepth","viewportMargin","Infinity","tabSize","indentUnit","indentWithTabs","extraKeys","Cmd-Enter","CmdEnter","log","match","exec","Error","stack","line","parseInt","thing","document","createElement","className","innerText","JSON","stringify","mark","setBookmark","ch","widget","insertLeft","__lineText","getLine","__result","getAllMarks","filter","k","forEach","clear","eval","getValue","Cmd-Z","requestAnimationFrame","undo","Shift-Cmd-Z","redo","Cmd-K","fork","Cmd-S","save","Cmd-M","setMessage","on","origin","commit","text","selections","listSelections","map","indexFromPos","anchor","head","trim","find","updateDiff","focus","_this2","__diff","lineWidgets","eachLine","removeLineClass","compare","changes","diff_main","diff_cleanupSemantic","choffset","cmpoffset","_loop","_changes$j","Object","_Users_kevin_Github_derp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","j","type","startpos","title","concat","onclick","console","compareCommit","slice","length","onmouseenter","setMergePreview","onmouseleave","posFromIndex","markText","replacedWith","_this3","mergePreview","setValue","_changes$j2","curOp","setSelections","_ref","_ref2","err","react__WEBPACK_IMPORTED_MODULE_6___default","a","React","Component","reduce","prev","delta","version","__webpack_require__","d","__webpack_exports__","getChildren","getState","getPath","computeAnchor","getCurrentChunk","childStore","childMapping","store","id","parent","push","reduceFn","children","bind","node","views","messages","sqr","x","dist2","v","w","y","distToSegment","p","Math","sqrt","l2","t","max","min","distToSegmentSquared","uuid","random","toString","Bread","_Users_kevin_Github_derp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_kevin_Github_derp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_kevin_Github_derp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","dragThing","mouseMove","_Users_kevin_Github_derp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","mouseUp","e","setState","window","addEventListener","preventDefault","thingRect","rows","querySelectorAll","lines","i","rect","getBoundingClientRect","x0","left","x1","right","y0","top","y1","pos","bottom","slices","sliceRect","dist","clientX","clientY","closestPos","sort","b","split","join","dockTarget","layout","row","elements","nextRows","cloneLayout","oldThing","splice","newRow","updateLayout","removeEventListener","Slice","style","cursor","react_flip_move__WEBPACK_IMPORTED_MODULE_9__","rowi","key","react_addons_css_transition_group__WEBPACK_IMPORTED_MODULE_8___default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","coli","assign","view","isDragging","getView","result","updateView","newRows","update","close","beginDrag","onClick","DAG","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_util__WEBPACK_IMPORTED_MODULE_1__","textNode","createElementNS","svg","v_spacing","v_height","h_spacing","path","height","recursive","trail","rect_width","label","textContent","getComputedTextLength","rx","ry","width","includes","pointer","setPointer","metaKey","altKey","shiftKey","ctrlKey","trailIndex","indexOf","cx","cy","r","child","curvedHorizontal","x2","y2","mx","setAttribute","setAttributeNS","body","appendChild","pathIndex","chunk","updatePointer","shouldFork","applyUpdate","viewIndex","onMouseDown","hideFooter","ref","placeholder","disabled","onChange","target","onKeyDown","keyCode","toggleFocus","aria-hidden","_dag__WEBPACK_IMPORTED_MODULE_12__","_codemirror_js__WEBPACK_IMPORTED_MODULE_11__","undefined","viewPathIndex","Date","now","appendStore","date","DEFAULT_STATE","null","App","_Users_kevin_Github_derp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_kevin_Github_derp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_kevin_Github_derp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","parse","localStorage","classList","toggle","confirm","_bread_js__WEBPACK_IMPORTED_MODULE_10__","_Users_kevin_Github_derp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","message","render","getElementById"],"mappings":"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","file":"static/js/main.4be95278.chunk.js","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport CodeMirror from 'codemirror'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/keymap/sublime'\n\nimport 'codemirror/addon/edit/closebrackets'\nimport 'codemirror/addon/edit/matchbrackets'\nimport 'codemirror/addon/comment/comment'\nimport './codemirror.css'\n\nvar DiffMatchPatch = require('diff-match-patch')\nvar dmp = new DiffMatchPatch()\nglobal.dmp = dmp\n\nexport default class CodeEditor extends React.Component {\n    componentDidMount() {\n        var el = ReactDOM.findDOMNode(this).querySelector('.editor')\n\n        var cm = CodeMirror(el, {\n            value: this.props.state.data,\n            mode: 'plain',\n\n            matchBrackets: true,\n            lineNumbers: false,\n            keyMap: 'sublime',\n            autoCloseBrackets: true,\n            lineWrapping: true,\n            undoDepth: 0,\n            viewportMargin: Infinity,\n\n            tabSize: 4,\n            indentUnit: 4,\n            indentWithTabs: false,\n\n            extraKeys: {\n                'Cmd-Enter'(cm) {\n                    cm.getAllMarks()\n                        .filter(k => k.__result)\n                        .forEach(k => k.clear())\n\n                    function log(value) {\n                        var match = /<anonymous>:(\\d+)/.exec(new Error().stack)\n                        if (match) {\n                            var line = parseInt(match[1], 10)\n                            var thing = document.createElement('span')\n                            thing.className = 'result'\n                            thing.innerText = JSON.stringify(value)\n                            var mark = cm.setBookmark(\n                                { line: line - 1, ch: 1e8 },\n                                {\n                                    widget: thing,\n                                    insertLeft: true,\n                                }\n                            )\n                            mark.__lineText = cm.getLine(line - 1)\n                            mark.__result = true\n                        }\n                    }\n                    eval(cm.getValue())\n                },\n                'Cmd-Z': cm => requestAnimationFrame(k => this.props.undo()),\n                'Shift-Cmd-Z': cm => requestAnimationFrame(k => this.props.redo()),\n                'Cmd-K': cm => requestAnimationFrame(k => this.props.fork()),\n                'Cmd-S': cm => requestAnimationFrame(k => this.props.save()),\n                'Cmd-M': cm => {\n                    this.props.setMessage()\n                },\n            },\n        })\n        this.cm = cm\n\n        cm.on('change', (cm, ch) => {\n            if (ch.origin !== 'setValue' && cm.getValue() !== this.props.state.data) {\n                // this.props.onChange(cm.getValue())\n                // console.log(cm.listSelections())\n                this.props.commit({\n                    text: cm.getValue(),\n                    selections: cm\n                        .listSelections()\n                        .map(k => [cm.indexFromPos(k.anchor), cm.indexFromPos(k.head)]),\n                })\n            }\n            cm.getAllMarks()\n                .filter(k => k.__result && k.__lineText.trim() !== cm.getLine(k.find().line).trim())\n                .forEach(k => k.clear())\n            // console.log(cm.getValue(), ch)\n            // this.props.onChange(cm.getValue())\n        })\n        this.updateDiff()\n    }\n    focus() {\n        this.cm.focus()\n    }\n    updateDiff() {\n        var cm = this.cm\n        cm.getAllMarks()\n            .filter(k => k.__diff)\n            .forEach(k => k.clear())\n        if (cm.lineWidgets) cm.lineWidgets.forEach(k => k.clear())\n        cm.lineWidgets = []\n        cm.eachLine(line => {\n            cm.removeLineClass(line, 'background', 'line-inserted')\n            cm.removeLineClass(line, 'background', 'line-changed')\n        })\n\n        let compare = this.props.compare && this.props.compare.data\n\n        if (typeof compare === 'string') {\n            var changes = dmp.diff_main(compare, this.props.state.data)\n            dmp.diff_cleanupSemantic(changes)\n\n            // var a = dmp.diff_linesToChars_(compare, this.props.state.data);\n            // var lineText1 = a.chars1;\n            // var lineText2 = a.chars2;\n            // var lineArray = a.lineArray;\n            // var changes = dmp.diff_main(lineText1, lineText2, false);\n            // dmp.diff_charsToLines_(changes, lineArray);\n\n            var choffset = 0\n            var cmpoffset = 0\n\n            for (var j = 0; j < changes.length; j++) {\n                let [type, text] = changes[j]\n                if (type < 0) {\n                    // delete\n                    let thing = document.createElement('span')\n                    thing.className = 'deleted'\n                    thing.innerText = text\n                    let startpos = choffset\n                    thing.title = `Delete ${JSON.stringify(text)} from reference cell`\n                    thing.onclick = () => {\n                        console.log('delete!', text)\n                        this.props.compareCommit({\n                            text:\n                                compare.slice(0, startpos) + compare.slice(startpos + text.length),\n                        })\n                        // this.props.save()\n                    }\n                    thing.onmouseenter = () => {\n                        this.props.setMergePreview(\n                            compare.slice(0, startpos) + compare.slice(startpos + text.length)\n                        )\n                    }\n                    thing.onmouseleave = () => {\n                        this.props.setMergePreview(null)\n                    }\n\n                    let mark = cm.setBookmark(cm.posFromIndex(choffset), {\n                        widget: thing,\n                    })\n                    mark.__diff = true\n                    cmpoffset += text.length\n                } else if (type > 0) {\n                    // insert\n                    let thing = document.createElement('span')\n                    thing.className = 'inserted'\n                    thing.innerText = text\n                    let startpos = cmpoffset\n                    thing.title = `Insert ${JSON.stringify(text)} into reference cell`\n                    thing.onclick = () => {\n                        console.log('insert!', text)\n\n                        this.props.compareCommit({\n                            text: compare.slice(0, startpos) + text + compare.slice(startpos),\n                        })\n                        // this.props.save()\n                    }\n                    thing.onmouseenter = () => {\n                        this.props.setMergePreview(\n                            compare.slice(0, startpos) + text + compare.slice(startpos)\n                        )\n                    }\n                    thing.onmouseleave = () => {\n                        this.props.setMergePreview(null)\n                    }\n\n                    let mark = cm.markText(\n                        cm.posFromIndex(choffset),\n                        cm.posFromIndex(choffset + text.length),\n                        {\n                            replacedWith: thing,\n                        }\n                    )\n                    mark.__diff = true\n\n                    choffset += text.length\n                } else {\n                    choffset += text.length\n                    cmpoffset += text.length\n                }\n            }\n        }\n    }\n    componentDidUpdate() {\n        if (this.props.mergePreview) {\n            this.cm.setValue(this.props.mergePreview)\n            var changes = dmp.diff_main(this.props.state.data, this.props.mergePreview)\n            dmp.diff_cleanupSemantic(changes)\n            var cm = this.cm\n            var choffset = 0\n\n            for (var j = 0; j < changes.length; j++) {\n                let [type, text] = changes[j]\n                if (type < 0) {\n                    // delete\n                    let thing = document.createElement('span')\n                    thing.className = 'deleted'\n                    thing.innerText = text\n                    let mark = cm.setBookmark(cm.posFromIndex(choffset), {\n                        widget: thing,\n                    })\n                    mark.__diff = true\n                } else if (type > 0) {\n                    // insert\n                    let thing = document.createElement('span')\n                    thing.className = 'inserted'\n                    thing.innerText = text\n\n                    let mark = cm.markText(\n                        cm.posFromIndex(choffset),\n                        cm.posFromIndex(choffset + text.length),\n                        {\n                            replacedWith: thing,\n                        }\n                    )\n                    mark.__diff = true\n\n                    choffset += text.length\n                } else {\n                    choffset += text.length\n                }\n            }\n        } else {\n            if (!this.cm.curOp && this.props.state.data !== this.cm.getValue()) {\n                // var selections = this.cm.listSelections()\n                this.cm.setValue(this.props.state.data)\n                try {\n                    this.cm.setSelections(\n                        this.props.state.selections.map(([anchor, head]) => ({\n                            anchor: this.cm.posFromIndex(anchor),\n                            head: this.cm.posFromIndex(head),\n                        }))\n                    )\n                } catch (err) {}\n            }\n            this.updateDiff()\n        }\n    }\n    render() {\n        return (\n            <div className=\"widget\">\n                <div className=\"editor\" />\n            </div>\n        )\n    }\n}\n\nexport function reduce(prev, delta) {\n    if (!prev) return { version: 0, data: '', selections: [] }\n\n    return {\n        version: prev.version + 1,\n        data: delta.text,\n        selections: delta.selections || prev.selections,\n    }\n}\n\n// export default function Widget(props){\n//     var state = props.state;\n//     if(!state){\n//         return <div>(no state)</div>\n//     }\n//     return <div className=\"widget\">\n//             <CodeEditor\n//                 value={state.data}\n\n//                 undo={props.undo}\n//                 redo={props.redo}\n//                 fork={props.fork}\n//                 setMessage={props.setMessage}\n//                 save={props.save}\n\n//                 compare={props.compare && props.compare.data}\n//                 onChange={text => props.commit({ text: text })} />\n//     </div>\n// }\n","var childStore = null,\n    childMapping = {}\n\nexport function getChildren(store, id) {\n    if (store !== childStore) {\n        childStore = store\n        childMapping = {}\n        for (var k in store) {\n            var parent = store[k].parent\n            if (!childMapping[parent]) {\n                childMapping[parent] = [k]\n            } else {\n                childMapping[parent].push(k)\n            }\n        }\n    }\n    return childMapping[id] || []\n}\n\nexport function getState(reduceFn, store, id) {\n    var commit = store[id]\n    if (!commit) return reduceFn(null, null)\n    return reduceFn(getState(reduceFn, store, commit.parent), commit.delta)\n}\n\nexport function getPath(store, id) {\n    var commit = store[id]\n    if (!commit) return [null]\n    return getPath(store, commit.parent).concat([id])\n}\n\nexport function computeAnchor(store, id) {\n    var children = getChildren.bind(this, store)\n    var node = id\n    var ch = children(node)\n    while (ch.length > 0) {\n        node = ch[0]\n        ch = children(node)\n    }\n    return node\n}\n\nexport function getCurrentChunk(store, id, views, messages) {\n    var children = getChildren.bind(this, store)\n    var node = id\n    var ch = children(node)\n\n    while (\n        ch.length === 1 &&\n        node &&\n        // && !views.some(k => k.anchor == node)\n        !messages[node]\n    ) {\n        node = ch[0]\n        // trail.push(node)\n        ch = children(node)\n    }\n    return node\n}\n","// why did i name this bread\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group' // ES6\nimport FlipMove from 'react-flip-move'\n\nimport './bread.css'\nimport 'font-awesome/css/font-awesome.css'\n\nfunction sqr(x) {\n    return x * x\n}\nfunction dist2(v, w) {\n    return sqr(v.x - w.x) + sqr(v.y - w.y)\n}\nfunction distToSegmentSquared(p, v, w) {\n    var l2 = dist2(v, w)\n    if (l2 === 0) return dist2(p, v)\n    var t = ((p.x - v.x) * (w.x - v.x) + (p.y - v.y) * (w.y - v.y)) / l2\n    t = Math.max(0, Math.min(1, t))\n    return dist2(p, { x: v.x + t * (w.x - v.x), y: v.y + t * (w.y - v.y) })\n}\nfunction distToSegment(p, v, w) {\n    return Math.sqrt(distToSegmentSquared(p, v, w))\n}\n\nfunction uuid() {\n    return Math.random().toString(36).slice(5, 10)\n}\n\nexport default class Bread extends React.Component {\n    constructor() {\n        super()\n        this.state = { dragThing: null }\n        this.mouseMove = this.mouseMove.bind(this)\n        this.mouseUp = this.mouseUp.bind(this)\n    }\n    beginDrag(thing, e) {\n        // console.log('begin drag', thing, e)\n        this.setState({\n            dragThing: thing,\n        })\n        window.addEventListener('mousemove', this.mouseMove)\n        window.addEventListener('mouseup', this.mouseUp)\n    }\n    mouseMove(e) {\n        if (this.state.dragThing) {\n            e.preventDefault()\n        }\n        var el = ReactDOM.findDOMNode(this)\n        var rows = el.querySelectorAll('.row')\n        var thingRect\n\n        var lines = []\n        for (var i = 0; i < rows.length; i++) {\n            var rect = rows[i].getBoundingClientRect()\n            if (i === 0) {\n                lines.push({\n                    x0: rect.left,\n                    x1: rect.right,\n                    y0: rect.top,\n                    y1: rect.top,\n                    pos: 'top-' + i,\n                })\n            }\n            lines.push({\n                x0: rect.left,\n                x1: rect.right,\n                y0: rect.bottom,\n                y1: rect.bottom,\n                pos: 'bottom-' + i,\n            })\n\n            var slices = rows[i].querySelectorAll('.slice')\n            for (var j = 0; j < slices.length; j++) {\n                var sliceRect = slices[j].getBoundingClientRect()\n                if (j === 0) {\n                    lines.push({\n                        x0: sliceRect.left,\n                        x1: sliceRect.left,\n                        y0: sliceRect.top,\n                        y1: sliceRect.bottom,\n                        pos: 'left-' + i + '-' + j,\n                    })\n                }\n                lines.push({\n                    x0: sliceRect.right,\n                    x1: sliceRect.right,\n                    y0: sliceRect.top,\n                    y1: sliceRect.bottom,\n                    pos: 'right-' + i + '-' + j,\n                })\n\n                if (this.state.dragThing === i + '-' + j) {\n                    thingRect = sliceRect\n                }\n            }\n        }\n\n        lines.forEach(k => {\n            k.dist = distToSegment(\n                { x: e.clientX, y: e.clientY },\n                { x: k.x0, y: k.y0 },\n                { x: k.x1, y: k.y1 }\n            )\n        })\n\n        var closestPos = lines.sort((a, b) => a.dist - b.dist)[0].pos\n        var thing = this.state.dragThing.split('-')\n\n        if (\n            e.clientX > thingRect.left &&\n            e.clientX < thingRect.right &&\n            e.clientY > thingRect.top &&\n            e.clientY < thingRect.bottom\n        ) {\n            closestPos =\n                +thing[1] === 0\n                    ? 'left-' + thing.join('-')\n                    : 'right-' + [thing[0], thing[1] - 1].join('-')\n        }\n        // console.log(closestPos.pos)\n\n        // console.log(i)\n        if (this.state.dockTarget !== i) {\n            this.setState({\n                dockTarget: closestPos,\n            })\n        }\n\n        // console.log('moving', e, )\n    }\n    cloneLayout() {\n        return {\n            rows: this.props.layout.rows.map(row => {\n                return { id: row.id, elements: row.elements.slice(0) }\n            }),\n        }\n    }\n    mouseUp(e) {\n        if (this.state.dockTarget) {\n            var pos = this.state.dockTarget.split('-')\n            var thing = this.state.dragThing.split('-')\n\n            var nextRows = this.cloneLayout().rows\n\n            if (pos[0] === 'top' || pos[0] === 'bottom') {\n                if (\n                    nextRows[+thing[0]].elements.length === 1 &&\n                    ((pos[0] === 'top' && +thing[0] === +pos[1]) ||\n                        (pos[0] === 'bottom' && +thing[0] === parseInt(pos[1]) + 1) ||\n                        (pos[0] === 'bottom' && +thing[0] === +pos[1]))\n                ) {\n                } else {\n                    let oldThing = nextRows[+thing[0]].elements.splice(+thing[1], 1)[0]\n                    let newRow = { id: uuid(), elements: [oldThing] }\n                    if (pos[0] === 'top') {\n                        nextRows.splice(+pos[1], 0, newRow)\n                    } else {\n                        nextRows.splice(1 + parseInt(pos[1]), 0, newRow)\n                    }\n                }\n            } else if (pos[0] === 'left' || pos[0] === 'right') {\n                // swap it with null\n                let oldThing = nextRows[+thing[0]].elements.splice(+thing[1], 1, null)[0]\n\n                if (pos[0] === 'left') {\n                    nextRows[+pos[1]].elements.splice(+pos[2], 0, oldThing)\n                } else {\n                    nextRows[+pos[1]].elements.splice(1 + parseInt(pos[2]), 0, oldThing)\n                }\n                // actually remove the thing\n                nextRows[+thing[0]].elements = nextRows[+thing[0]].elements.filter(k => k !== null)\n            }\n\n            nextRows = nextRows.filter(k => k.elements.length > 0)\n\n            this.props.updateLayout({ rows: nextRows })\n        }\n\n        this.setState({\n            dragThing: null,\n            dockTarget: null,\n        })\n\n        window.removeEventListener('mousemove', this.mouseMove)\n        window.removeEventListener('mouseup', this.mouseUp)\n    }\n\n    render() {\n        var Slice = this.props.Slice\n        return (\n            <div className=\"bread\" style={{ cursor: this.state.dragThing ? 'move' : 'default' }}>\n                <FlipMove>\n                    {this.props.layout.rows.map((row, rowi) => (\n                        <div\n                            className={\n                                'row ' +\n                                ((this.state.dockTarget === 'top-' + rowi ? 'insert-top ' : '') +\n                                    (this.state.dockTarget === 'bottom-' + rowi\n                                        ? 'insert-bottom '\n                                        : '') +\n                                    ('row-' + row.elements.length + ' '))\n                            }\n                            key={row.id}\n                        >\n                            <ReactCSSTransitionGroup\n                                transitionName=\"example\"\n                                transitionEnterTimeout={300}\n                                transitionLeaveTimeout={300}\n                            >\n                                {row.elements.map((data, coli) => (\n                                    <div\n                                        className={\n                                            'col ' +\n                                            ((this.state.dockTarget === 'left-' + rowi + '-' + coli\n                                                ? 'insert-left '\n                                                : '') +\n                                                (this.state.dockTarget ===\n                                                'right-' + rowi + '-' + coli\n                                                    ? 'insert-right '\n                                                    : ''))\n                                        }\n                                        key={data.id}\n                                    >\n                                        <Slice\n                                            view={data}\n                                            isDragging={\n                                                this.state.dragThing === [rowi, coli].join('-')\n                                            }\n                                            getView={id => {\n                                                var result\n                                                this.props.layout.rows.forEach(row =>\n                                                    row.elements.forEach(data => {\n                                                        if (data.id === id) result = data\n                                                    })\n                                                )\n                                                return result\n                                            }}\n                                            updateView={(id, e) => {\n                                                var newRows = this.props.layout.rows.map(row => {\n                                                    return Object.assign(row, {\n                                                        elements: row.elements.map(data => {\n                                                            return data.id === id\n                                                                ? Object.assign({}, data, e)\n                                                                : data\n                                                        }),\n                                                    })\n                                                })\n                                                this.props.updateLayout({ rows: newRows })\n                                            }}\n                                            fork={e => {\n                                                var newRows = this.cloneLayout().rows\n                                                newRows[rowi].elements.splice(\n                                                    coli + 1,\n                                                    0,\n                                                    Object.assign({}, data, { id: uuid() }, e || {})\n                                                )\n                                                this.props.updateLayout({ rows: newRows })\n                                            }}\n                                            update={e => {\n                                                var newRows = this.cloneLayout().rows\n                                                newRows[rowi].elements[coli] = Object.assign(\n                                                    {},\n                                                    data,\n                                                    e\n                                                )\n                                                this.props.updateLayout({ rows: newRows })\n                                            }}\n                                            close={e => {\n                                                var newRows = this.cloneLayout().rows\n                                                newRows[rowi].elements.splice(coli, 1)\n                                                this.props.updateLayout({\n                                                    rows: newRows.filter(\n                                                        k => k.elements.length > 0\n                                                    ),\n                                                })\n                                            }}\n                                            beginDrag={e =>\n                                                this.beginDrag([rowi, coli].join('-'), e)\n                                            }\n                                            {...this.props}\n                                        />\n                                    </div>\n                                ))}\n                            </ReactCSSTransitionGroup>\n                        </div>\n                    ))}\n\n                    <div\n                        className=\"fake-row row-1\"\n                        onClick={e =>\n                            this.props.updateLayout({\n                                rows: this.props.layout.rows.concat([\n                                    { id: uuid(), elements: [{ id: uuid() }] },\n                                ]),\n                            })\n                        }\n                    >\n                        <span>\n                            <div className=\"col\">\n                                <div className=\"fake-slice\">+</div>\n                            </div>\n                        </span>\n                    </div>\n                </FlipMove>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { getPath, getChildren } from './util'\n\nvar textNode = document.createElementNS('http://www.w3.org/2000/svg', 'text')\nvar svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\nsvg.setAttribute('class', 'measure')\nsvg.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', 'http://www.w3.org/1999/xlink')\ndocument.body.appendChild(svg)\nsvg.appendChild(textNode)\n\nfunction measureText(text) {\n    if (!text.trim()) return 0\n    textNode.textContent = text\n    return textNode.getComputedTextLength()\n}\n\nexport default function DAG(props) {\n    var store = props.store,\n        view = props.view,\n        messages = props.messages\n\n    const v_spacing = 25\n    const v_height = 20\n\n    const h_spacing = 10\n\n    var children = getChildren.bind(this, store)\n    var path = getPath(store, view.anchor)\n\n    var elements = [],\n        lines = []\n\n    function recursive(node, x, y) {\n        var ch = children(node)\n        var trail = [node]\n        while (ch.length === 1 && node && !props.messages[node]) {\n            node = ch[0]\n            trail.push(node)\n            ch = children(node)\n        }\n\n        if (!node) {\n        } else {\n            // console.log(trail.includes(view.pointer))\n            var rect_width = 10 * Math.sqrt(trail.length + 1)\n\n            var label = messages[node] || ''\n\n            rect_width = Math.max(rect_width, 5 + measureText(label))\n\n            elements.push(\n                <rect\n                    key={'r-' + node}\n                    x={x}\n                    y={y - v_height / 2}\n                    rx={2}\n                    ry={2}\n                    width={rect_width}\n                    height={v_height}\n                    className={\n                        trail.includes(view.pointer)\n                            ? 'active'\n                            : path.includes(node)\n                            ? 'mainline'\n                            : 'inactive'\n                    }\n                    onClick={e =>\n                        props.setPointer(node, e.metaKey || e.altKey || e.shiftKey || e.ctrlKey)\n                    }\n                />\n            )\n\n            if (trail.includes(view.pointer) && trail.length > 0) {\n                var trailIndex = trail.indexOf(view.pointer),\n                    eps = 0.001\n                elements.push(\n                    <circle\n                        key={'c-' + node}\n                        cx={x + rect_width * ((trailIndex + eps) / (trail.length - 1 + eps))}\n                        cy={y}\n                        r={3}\n                        className=\"active\"\n                    />\n                )\n            }\n\n            elements.push(\n                <text key={'t-' + node} x={2 + x} y={y}>\n                    {label}\n                </text>\n            )\n\n            x += rect_width\n        }\n\n        var y1 = y\n        for (var i = 0; i < ch.length; i++) {\n            var child = ch[i]\n            if (i > 0) y1 += v_spacing\n\n            // if(node) lines.push(<line\n            //     x1={x} y1={y}\n            //     x2={x + h_spacing} y2={y1}\n            //     className={path.includes(child) ? 'mainline' : 'inactive'} />)\n\n            if (node)\n                lines.push(\n                    <path\n                        key={'p-' + child}\n                        d={curvedHorizontal(x, y, x + h_spacing, y1)}\n                        className={path.includes(child) ? 'mainline' : 'inactive'}\n                    />\n                )\n            y1 = recursive(child, x + h_spacing, y1)\n        }\n        return y1\n    }\n\n    var height = 10 + recursive(null, -h_spacing, 10)\n    return (\n        <svg className=\"dag\" height={height}>\n            {lines}\n            {elements}\n        </svg>\n    )\n}\n\n// https://github.com/hughsk/svg-line-curved/blob/master/index.js\nfunction curvedHorizontal(x1, y1, x2, y2) {\n    var line = []\n    var mx = x1 + (x2 - x1) / 2\n\n    line.push('M', x1, y1)\n    line.push('C', mx, y1, mx, y2, x2, y2)\n\n    return line.join(' ')\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './app.css'\nimport './dag.css'\nimport Bread from './bread.js'\nimport Widget, { reduce } from './codemirror.js'\nimport DAG from './dag'\nimport { getCurrentChunk, computeAnchor, getState, getPath } from './util'\n\nfunction Slice(props) {\n    var pointer = props.view.pointer || null,\n        anchor = props.view.anchor || null\n\n    var state = getState(reduce, props.store, pointer)\n    var path = getPath(props.store, anchor)\n    var pathIndex = path.indexOf(pointer)\n    var chunk = getCurrentChunk(props.store, pointer, props.views, props.messages)\n\n    var updatePointer = (id, shouldFork) => {\n        const applyUpdate = e => (shouldFork ? props.fork(e) : props.update(e))\n        if (path.includes(id)) {\n            applyUpdate({ pointer: id })\n        } else {\n            applyUpdate({ pointer: id, anchor: computeAnchor(props.store, id) })\n        }\n    }\n\n    var commit = delta => {\n        var id = 'C' + Date.now()\n        props.appendStore(id, {\n            parent: pointer,\n            delta: delta,\n            date: Date.now(),\n        })\n        updatePointer(id)\n    }\n\n    var fork = () => props.fork()\n\n    var save = () => {\n        if (!props.messages[props.view.pointer]) {\n            props.setMessage(props.view.pointer, 'r' + pathIndex)\n        }\n    }\n\n    var compare\n    if (props.viewIndex) {\n        let view = props.getView(props.viewIndex)\n        compare = getState(reduce, props.store, (view && view.pointer) || null)\n    }\n\n    var compareCommit = delta => {\n        if (!compare) return\n        let view = props.getView(props.viewIndex)\n\n        if (!props.messages[view.pointer]) {\n            var viewPath = getPath(props.store, view.anchor)\n            var viewPathIndex = viewPath.indexOf(view.pointer)\n            props.setMessage(view.pointer, 'r' + viewPathIndex)\n        } else if (props.messages[view.pointer] === 'Merge') {\n            props.setMessage(view.pointer, undefined)\n        }\n\n        var id = 'C' + Date.now()\n        props.appendStore(id, {\n            parent: (view && view.pointer) || null,\n            delta: delta,\n            date: Date.now(),\n        })\n\n        props.updateView(props.viewIndex, {\n            pointer: id,\n            anchor: id,\n        })\n\n        if (!props.messages[id]) {\n            props.setMessage(id, 'Merge')\n        }\n\n        props.setMergePreview(null)\n    }\n\n    let title\n    let widget\n\n    return (\n        <div\n            className={\n                'slice ' +\n                (props.isDragging ? 'dragging ' : '') +\n                (props.viewIndex\n                    ? props.viewIndex === props.view.id\n                        ? 'reference '\n                        : 'other '\n                    : '')\n            }\n        >\n            <div className=\"header\" onMouseDown={props.beginDrag}>\n                <div\n                    className={'button-toggle ' + (props.view.hideFooter ? 'inactive' : 'active')}\n                    title=\"Toggle revision timeline\"\n                    onClick={e => props.update({ hideFooter: !props.view.hideFooter })}\n                >\n                    {props.view.hideFooter ? '▼' : '▲'}\n                </div>\n\n                <input\n                    type=\"text\"\n                    ref={e => (title = e)}\n                    className=\"title\"\n                    value={props.messages[chunk] || ''}\n                    placeholder={pointer === null ? 'blank' : 'no description'}\n                    disabled={pointer === null}\n                    onChange={e => props.setMessage(chunk, e.target.value)}\n                    onKeyDown={e => {\n                        if (e.keyCode === 13) {\n                            e.preventDefault()\n                            widget.focus()\n                        }\n                    }}\n                />\n\n                <div\n                    className={\n                        'button ' + (props.viewIndex === props.view.id ? 'active' : 'inactive')\n                    }\n                    onClick={e => props.toggleFocus(props.view.id)}\n                    title=\"Show differences relative to this version.\"\n                >\n                    <i className=\"fa fa-bullseye\" aria-hidden=\"true\" />\n                </div>\n\n                <div className=\"button\" onClick={fork} title=\"Fork this revision\">\n                    <i className=\"fa fa-code-fork\" aria-hidden=\"true\" />\n                </div>\n\n                <div className=\"button\" onClick={props.close} title=\"Close this window\">\n                    <i className=\"fa fa-close\" aria-hidden=\"true\" />\n                </div>\n            </div>\n\n            {props.view.hideFooter ? null : (\n                <div className=\"footer\">\n                    <input\n                        type=\"range\"\n                        className=\"time-slider\"\n                        min={0}\n                        max={path.length - 1}\n                        disabled={path.length < 2}\n                        onChange={e => updatePointer(path[e.target.value])}\n                        value={path.indexOf(pointer)}\n                    />\n\n                    <DAG\n                        store={props.store}\n                        view={props.view}\n                        messages={props.messages}\n                        views={props.views}\n                        setPointer={updatePointer}\n                    />\n                </div>\n            )}\n\n            <Widget\n                ref={e => (widget = e)}\n                setMessage={e => title.focus()}\n                undo={e => pathIndex > 0 && updatePointer(path[pathIndex - 1])}\n                redo={e => pathIndex < path.length - 1 && updatePointer(path[pathIndex + 1])}\n                fork={e => fork()}\n                save={e => save()}\n                compareCommit={compareCommit}\n                mergePreview={props.viewIndex === props.view.id ? props.mergePreview : null}\n                setMergePreview={props.setMergePreview}\n                compare={compare}\n                state={state}\n                commit={commit}\n            />\n        </div>\n    )\n}\n\nconst DEFAULT_STATE = {\n    store: {},\n    viewIndex: null,\n    messages: {\n        null: '',\n    },\n    layout: {\n        rows: [],\n    },\n}\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        try {\n            this.state = JSON.parse(localStorage.state)\n            console.log(this.state.layout.rows.length)\n        } catch (e) {\n            this.state = JSON.parse(JSON.stringify(DEFAULT_STATE))\n        }\n        // window.onstorage = () => {\n        //     var latest = JSON.parse(localStorage.state);\n        //     if(JSON.stringify(latest.store) != JSON.stringify(this.state.store) ||\n        //         JSON.stringify(latest.messages) != JSON.stringify(this.state.messages)){\n        //         this.setState({ store: latest.store, messages: latest.messages })\n        //     }\n        // }\n    }\n    componentDidUpdate() {\n        localStorage.state = JSON.stringify(this.state)\n\n        document.body.classList.toggle('merge', !!this.state.viewIndex)\n    }\n\n    render() {\n        global.App = this\n\n        return (\n            <div>\n                <div className=\"main-header\">\n                    <h1>derp version control prototype</h1>\n\n                    <div className=\"toolbar\">\n                        <div\n                            className=\"button\"\n                            onClick={e => {\n                                if (\n                                    window.confirm(\n                                        'Are you sure you want to clear all history and start over? This can not be undone.'\n                                    )\n                                ) {\n                                    localStorage.state = null\n                                    this.setState(JSON.parse(JSON.stringify(DEFAULT_STATE)))\n                                }\n                            }}\n                            title=\"Clear everything\"\n                        >\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"main-header\">\n                    <div>\n                        <p>\n                            <b>Derp</b> is <b>version control</b> reimagined for{' '}\n                            <b>experimentation</b> and <b>live collaboration</b> in the internet\n                            age.\n                        </p>\n                        <p>\n                            Rather than operating on files, it’s integrated into an application's\n                            state management system. Coupled with a projectional window management\n                            system, you can create <b>lightweight forks</b> to try new ideas while\n                            referencing other versions. Edits are synchronized\n                            character-by-character over the internet in <b>real-time</b>. It blends\n                            the simplicity of <b>undo/redo</b> with the power and reliability of\n                            modern distributed version control systems like Git. You never have to\n                            worry about losing data by a series of undos, redos, and edits. And you\n                            never have to worry about forgetting to commit code.\n                        </p>\n                    </div>\n                </div>\n                <Bread\n                    Slice={Slice}\n                    layout={this.state.layout}\n                    updateLayout={data => this.setState({ layout: data })}\n                    store={this.state.store}\n                    messages={this.state.messages}\n                    viewIndex={this.state.viewIndex}\n                    mergePreview={this.state.mergePreview}\n                    toggleFocus={id =>\n                        this.setState({\n                            viewIndex: this.state.viewIndex === id ? null : id,\n                            mergePreview: null,\n                        })\n                    }\n                    appendStore={(id, value) =>\n                        this.setState({\n                            store: Object.assign({}, this.state.store, { [id]: value }),\n                        })\n                    }\n                    setMergePreview={data => {\n                        if (this.state.mergePreview !== data) this.setState({ mergePreview: data })\n                    }}\n                    setMessage={(id, message) =>\n                        this.setState({\n                            messages: Object.assign({}, this.state.messages, { [id]: message }),\n                        })\n                    }\n                />\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}